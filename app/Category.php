<?php

namespace App;

use App\Observers\CategoryObserver;
use Illuminate\Database\Eloquent\Model;

class Category extends Model
{

    protected $table = 'categories';
    public $timestamps = true;
    protected $fillable = array('name', 'image', 'activated','parent_id');

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        Category::observe(CategoryObserver::class);
    }

    // public function getImageAttribute($value)
    // {
    //     return url()->previous().'/'.$value;
    // }
//    public function stores()
//    {
//        return $this->hasMany('App\Store');
//    }


    public function unitColors()
    {
        return $this->hasMany('App\UnitColor');
    }

    public function brands()
    {
        return $this->hasMany('App\Brand');
    }

    protected static function booted()
    {
        static::addGlobalScope('ancient', function (Builder $builder) {
            $builder->where('activated', 1);
        });
    }

    public function Active()
    {
        return $this->where('activated', 1)->get();
    }

    public function parent()
    {
        return $this->belongsTo('App\Category', 'parent_id');
    }

    public function childs(){
        return $this->hasMany('App\Category', 'parent_id', 'id');
    }

    public function child($id){
        $child = $this->where('parent_id', $id)->get()->count();
        if ($child == 0){
            return true;
        }else{
            return false;
        }
    }

    public function stores()
    {
        return $this->belongsToMany(Store::class, 'category_store');
    }
}
